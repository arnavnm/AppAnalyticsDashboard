[{"/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/index.js":"1","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/App.js":"2","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/reportWebVitals.js":"3","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/grid.js":"4","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/usedBy.js":"5","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/activity.js":"6","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/usersAddedMed.js":"7","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/pieMed.js":"8","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/usersAddedDisease.js":"9","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/pieParameter.js":"10","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/topRankMeds.js":"11","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/pieCondition.js":"12","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/location.js":"13","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/topRankConditions.js":"14","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/topRankParameters.js":"15","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/mobilePlatform.js":"16","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/tab.js":"17","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/indi.js":"18","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/numberPie.js":"19","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/activeUsers.js":"20","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/registrations.js":"21","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/topBar.js":"22","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/charts.js":"23","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/usersAddedParameter.js":"24"},{"size":500,"mtime":1627296132421,"results":"25","hashOfConfig":"26"},{"size":205,"mtime":1627296843894,"results":"27","hashOfConfig":"26"},{"size":362,"mtime":1627296132422,"results":"28","hashOfConfig":"26"},{"size":24126,"mtime":1627297695304,"results":"29","hashOfConfig":"26"},{"size":1554,"mtime":1626944580000,"results":"30","hashOfConfig":"26"},{"size":2526,"mtime":1626944580000,"results":"31","hashOfConfig":"26"},{"size":1234,"mtime":1626944580000,"results":"32","hashOfConfig":"26"},{"size":2359,"mtime":1626944580000,"results":"33","hashOfConfig":"26"},{"size":1252,"mtime":1626944580000,"results":"34","hashOfConfig":"26"},{"size":2514,"mtime":1626944580000,"results":"35","hashOfConfig":"26"},{"size":3852,"mtime":1626944580000,"results":"36","hashOfConfig":"26"},{"size":2594,"mtime":1626944580000,"results":"37","hashOfConfig":"26"},{"size":2077,"mtime":1626944580000,"results":"38","hashOfConfig":"26"},{"size":3871,"mtime":1626944580000,"results":"39","hashOfConfig":"26"},{"size":3866,"mtime":1626944580000,"results":"40","hashOfConfig":"26"},{"size":2387,"mtime":1626944580000,"results":"41","hashOfConfig":"26"},{"size":2861,"mtime":1626944580000,"results":"42","hashOfConfig":"26"},{"size":1631,"mtime":1626944580000,"results":"43","hashOfConfig":"26"},{"size":3392,"mtime":1626944580000,"results":"44","hashOfConfig":"26"},{"size":982,"mtime":1626944580000,"results":"45","hashOfConfig":"26"},{"size":973,"mtime":1627298049922,"results":"46","hashOfConfig":"26"},{"size":2740,"mtime":1626944580000,"results":"47","hashOfConfig":"26"},{"size":10076,"mtime":1626944580000,"results":"48","hashOfConfig":"26"},{"size":1258,"mtime":1626944580000,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"zxkrao",{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":115,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},"/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/index.js",[],"/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/App.js",["119"],"import logo from './logo.svg';\nimport './App.css';\nimport AutoGrid from './components/grid';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AutoGrid/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/reportWebVitals.js",[],"/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/grid.js",["120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234"],"import React , { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Container from '@material-ui/core/Container';\r\nimport CenteredTabs from './tab';\r\nimport MenuAppBar from './topBar';\r\nimport Charts from './charts';\r\nimport UsedBy from './usedBy';\r\nimport ActiveUsers from './activeUsers';\r\nimport Activity from './activity';\r\nimport UsersAddedMed from './usersAddedMed'\r\nimport UsersAddedDisease from './usersAddedDisease';\r\nimport UsersAddedParameter from './usersAddedParameter';\r\nimport PieMed from './pieMed';\r\nimport PieCondition from './pieCondition';\r\nimport PieParameter from './pieParameter';\r\nimport TopRankMeds from './topRankMeds';\r\nimport TopRankConditions from './topRankConditions';\r\nimport TopRankParameters from './topRankParameters';\r\nimport MobilePlatform from './mobilePlatform';\r\nimport Location from './location';\r\nimport NumberPie from './numberPie';\r\nimport IndividualStats from './indi';\r\nimport RegisteredUsers from './registrations';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n\r\n  },\r\n}));\r\n\r\nfunction AutoGrid() {\r\n  const classes = useStyles();\r\n\r\n\r\n  const [value, setValue] = useState(\"India\");\r\n  const handleChange = (event, value) => {\r\n    setValue(value);\r\n  };\r\n  console.log(value)\r\n  var timeElapsed = Date.now();\r\n  var timeElapsedPrevious = Date.now() - 7 * 24 * 60 * 60 * 1000;\r\n  var today = new Date(timeElapsedPrevious).toISOString().slice(0, 10);\r\n  var lastWeek = new Date(timeElapsed).toISOString().slice(0, 10);\r\n\r\n  var [selectedDate, setSelectedDate] = useState(today); //today\r\n  var [selectedEndDate, setSelectedEndDate] = useState(lastWeek); //lastWeek\r\n\r\n  var choiceSelectedDate = true;\r\n  const handleDateChange = (event) => {\r\n    setSelectedDate(String(event.target.value));\r\n    choiceSelectedDate = true;\r\n\r\n  };\r\n\r\n  const handleEndDateChange = (event) => {\r\n    setSelectedEndDate(String(event.target.value));\r\n    choiceSelectedDate = false;\r\n\r\n  };\r\n\r\n  if (value === \"India\") {\r\n      var reg = <RegisteredUsers value='India' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"india\" tenant='all'/>;\r\n      var used = <UsedBy value= 'India' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"india\" tenant='all'/>;\r\n      var active = <ActiveUsers  value='India' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"india\" tenant='all'/>;\r\n      var plt = <MobilePlatform value='India' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"india\" tenant='all'/>;\r\n      var charts = <Charts value='India' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"india\" tenant='all'/>;\r\n      var locate = <Location   value='India' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} EndDate={selectedEndDate} country=\"india\" tenant='all'/>;\r\n      var numpie = <NumberPie value='India' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"india\" tenant='all'/>;\r\n      var indi = <IndividualStats value='India'/>;\r\n      var topRankConditions = <TopRankConditions value='India' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"india\" tenant='all'/>;\r\n      var topRankMeds = <TopRankMeds value='India' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"india\" tenant='all'/>;\r\n      var topRankParameters = <TopRankParameters value='India' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"india\" tenant='all'/>;\r\n      var medadd= <UsersAddedMed value='India' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"india\" tenant='all'/>;\r\n      var disadd= <UsersAddedDisease value='India' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"india\" tenant='all'/>;\r\n      var paradd= <UsersAddedParameter value='India' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"india\" tenant='all'/>;\r\n      var piemed= <PieMed value='India' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"india\" tenant='all'/>;\r\n      var piecondition= <PieCondition value='India' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"india\" tenant='all'/>;\r\n      var pieparameter= <PieParameter value='India' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"india\" tenant='all'/>;\r\n      var activity= <Activity value='India' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"india\" tenant='all'/>;\r\n    } else if (value === \"USA\") {\r\n      var reg = <RegisteredUsers value='USA' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"united_states\" tenant='all'/>;\r\n      var used = <UsedBy value= 'USA' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"united_states\" tenant='all'/>;\r\n      var active = <ActiveUsers  value='USA' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"united_states\" tenant='all'/>;\r\n      var plt = <MobilePlatform value='USA' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"united_states\" tenant='all'/>;\r\n      var charts = <Charts value='USA' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"united_states\" tenant='all'/>;\r\n      var locate = <Location   value='USA' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} EndDate={selectedEndDate} country=\"united_states\" tenant='all'/>;\r\n      var numpie = <NumberPie value='USA' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"united_states\" tenant='all'/>;\r\n      var indi = <IndividualStats value='USA'/>;\r\n      var topRankConditions = <TopRankConditions value='USA' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"united_states\" tenant='all'/>;\r\n      var topRankMeds = <TopRankMeds value='USA' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"united_states\" tenant='all'/>;\r\n      var topRankParameters = <TopRankParameters value='USA' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"united_states\" tenant='all'/>;\r\n      var medadd= <UsersAddedMed value='USA' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"united_states\" tenant='all'/>;\r\n      var disadd= <UsersAddedDisease value='USA' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"united_states\" tenant='all'/>;\r\n      var paradd= <UsersAddedParameter value='USA' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"united_states\" tenant='all'/>;\r\n      var piemed= <PieMed value='USA' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"united_states\" tenant='all'/>;\r\n      var piecondition= <PieCondition value='USA' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"united_states\" tenant='all'/>;\r\n      var pieparameter= <PieParameter value='USA' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"united_states\" tenant='all'/>;\r\n      var activity= <Activity value='USA' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"united_states\" tenant='all'/>;\r\n    }else if (value === \"Thermofisher\") {\r\n      var reg = <RegisteredUsers value='Thermofisher' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='2'/>;\r\n      var used = <UsedBy value= 'Thermofisher' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='2'/>;\r\n      var active = <ActiveUsers  value='Thermofisher' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='2'/>;\r\n      var plt = <MobilePlatform value='Thermofisher' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='2'/>;\r\n      var charts = <Charts value='Thermofisher' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='2'/>;\r\n      var locate = <Location   value='Thermofisher' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} EndDate={selectedEndDate} country=\"all\" tenant='2'/>;\r\n      var numpie = <NumberPie value='Thermofisher' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='2'/>;\r\n      var indi = <IndividualStats value='Thermofisher'/>;\r\n      var topRankConditions = <TopRankConditions value='Thermofisher' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='2'/>;\r\n      var topRankMeds = <TopRankMeds value='Thermofisher' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='2'/>;\r\n      var topRankParameters = <TopRankParameters value='Thermofisher' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='2'/>;\r\n      var medadd= <UsersAddedMed value='Thermofisher' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='2'/>;\r\n      var disadd= <UsersAddedDisease value='Thermofisher' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='2'/>;\r\n      var paradd= <UsersAddedParameter value='Thermofisher' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='2'/>;\r\n      var piemed= <PieMed value='Thermofisher' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='2'/>;\r\n      var piecondition= <PieCondition value='Thermofisher' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='2'/>;\r\n      var pieparameter= <PieParameter value='Thermofisher' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='2'/>;\r\n      var activity= <Activity value='Thermofisher' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='2'/>;\r\n    }else if (value === \"CGS\") {\r\n      var reg = <RegisteredUsers value='CGS' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='3'/>;\r\n      var used = <UsedBy value= 'CGS' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='3'/>;\r\n      var active = <ActiveUsers  value='CGS' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='3'/>;\r\n      var plt = <MobilePlatform value='CGS' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='3'/>;\r\n      var charts = <Charts value='CGS' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='3'/>;\r\n      var locate = <Location   value='CGS' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} EndDate={selectedEndDate} country=\"all\" tenant='3'/>;\r\n      var numpie = <NumberPie value='CGS' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='3'/>;\r\n      var indi = <IndividualStats value='CGS'/>;\r\n      var topRankConditions = <TopRankConditions value='CGS' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='3'/>;\r\n      var topRankMeds = <TopRankMeds value='CGS' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='3'/>;\r\n      var topRankParameters = <TopRankParameters value='CGS' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='3'/>;\r\n      var medadd= <UsersAddedMed value='CGS' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='3'/>;\r\n      var disadd= <UsersAddedDisease value='CGS' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='3'/>;\r\n      var paradd= <UsersAddedParameter value='CGS' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='3'/>;\r\n      var piemed= <PieMed value='CGS' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='3'/>;\r\n      var piecondition= <PieCondition value='CGS' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='3'/>;\r\n      var pieparameter= <PieParameter value='CGS' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='3'/>;\r\n      var activity= <Activity value='CGS' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='3'/>;\r\n    }else if (value === \"Others\") {\r\n      var reg = <RegisteredUsers value='Others' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"others\" tenant='all'/>;\r\n      var used = <UsedBy value= 'Others' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"others\" tenant='all'/>;\r\n      var active = <ActiveUsers  value='Others' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"others\" tenant='all'/>;\r\n      var plt = <MobilePlatform value='Others' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"others\" tenant='all'/>;\r\n      var charts = <Charts value='Others' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"others\" tenant='all'/>;\r\n      var locate = <Location   value='Others' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} EndDate={selectedEndDate} country=\"others\" tenant='all'/>;\r\n      var numpie = <NumberPie value='Others' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"others\" tenant='all'/>;\r\n      var indi = <IndividualStats value='Others'/>;\r\n      var topRankConditions = <TopRankConditions value='Others' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"others\" tenant='all'/>;\r\n      var topRankMeds = <TopRankMeds value='Others' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"others\" tenant='all'/>;\r\n      var topRankParameters = <TopRankParameters value='Others' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"others\" tenant='all'/>;\r\n      var medadd= <UsersAddedMed value='Others' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"others\" tenant='all'/>;\r\n      var disadd= <UsersAddedDisease value='Others' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"others\" tenant='all'/>;\r\n      var paradd= <UsersAddedParameter value='Others' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"others\" tenant='all'/>;\r\n      var piemed= <PieMed value='Others' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var piecondition= <PieCondition value='Others' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var pieparameter= <PieParameter value='Others' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var activity= <Activity value='Others' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n    }else if (value === \"KYM\") {\r\n      var reg = <RegisteredUsers value='KYM' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var used = <UsedBy value= 'KYM' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var active = <ActiveUsers  value='KYM' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var plt = <MobilePlatform value='KYM' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var charts = <Charts value='KYM' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var locate = <Location   value='KYM' key={[selectedDate,selectedEndDate,value,value]} startDate= {selectedDate} EndDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var numpie = <NumberPie value='KYM' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var indi = <IndividualStats value='KYM' />;\r\n      var topRankConditions = <TopRankConditions value='KYM' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var topRankMeds = <TopRankMeds value='KYM' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var topRankParameters = <TopRankParameters value='KYM' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var medadd= <UsersAddedMed value='KYM' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var disadd= <UsersAddedDisease value='KYM' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var paradd= <UsersAddedParameter value='KYM' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var piemed= <PieMed value='KYM' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var piecondition= <PieCondition value='KYM' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var pieparameter= <PieParameter value='KYM' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n      var activity= <Activity value='KYM' key={[selectedDate,selectedEndDate,value]} startDate= {selectedDate} endDate={selectedEndDate} country=\"all\" tenant='all'/>;\r\n    } else {\r\n      var reg = <p></p>;\r\n      var used = <p></p>;\r\n      var active = <p></p>;\r\n      var plt = <p></p>;\r\n      var charts = <p></p>;\r\n      var locate = <p></p>;\r\n      var numpie = <p></p>;\r\n      var indi =<p></p>;\r\n      var topRankMeds = <p></p>;\r\n      var topRankConditions = <p></p>;\r\n      var topRankParameters = <p></p>;\r\n      var medadd= <p></p>;\r\n      var disadd= <p></p>;\r\n      var paradd= <p></p>;\r\n      var piemed= <p></p>;\r\n      var piecondition= <p></p>;\r\n      var pieparameter= <p></p>;\r\n      var activity = <p></p>;\r\n    }\r\n\r\n\r\n  return (\r\n\r\n\r\n    <div style={{backgroundColor:\"#F8F8F8\"}}>\r\n\r\n    <MenuAppBar/>\r\n    <CenteredTabs onHandleChange={handleChange} value={value} />\r\n    <div style={{margin: \"2vw\"}}>\r\n      <input style={{margin: \"1vw\"}} type=\"date\" id=\"startDate\" name=\"start\" value={selectedDate} onChange={handleDateChange}/>\r\n      To <input style={{margin: \"1vw\"}} type=\"date\" id=\"endDate\" name=\"end\" value={selectedEndDate} onChange={handleEndDateChange}/>\r\n    </div>\r\n    <Container maxWidth=\"lg\" style={{marginTop: \"5em\"}}>\r\n\r\n\r\n\r\n    <div className={classes.root}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          <Paper className={classes.paper}>\r\n            {reg}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Paper className={classes.paper}>\r\n            {active}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Paper className={classes.paper}>\r\n            {plt}\r\n          </Paper>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n      <Grid container spacing={3}>\r\n      <Grid item xs={4}>\r\n        <Paper className={classes.paper}>\r\n          {activity}\r\n        </Paper>\r\n      </Grid>\r\n        <Grid item xs={8}>\r\n          <Paper className={classes.paper}>\r\n           {charts}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs>\r\n          <Paper className={classes.paper}>\r\n            {medadd}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Paper className={classes.paper}>\r\n            {disadd}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Paper className={classes.paper}>\r\n            {paradd}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>\r\n           {piemed}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>\r\n           {piecondition}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>\r\n           {pieparameter}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>\r\n           {topRankMeds}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>\r\n           {topRankConditions}\r\n          </Paper>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Paper className={classes.paper}>\r\n           {topRankParameters}\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n\r\n\r\n\r\n    </div>\r\n    </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default AutoGrid;\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/usedBy.js",["235","236","237"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass UsedBy extends Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        numOfUsersMed: \"\",\r\n        numOfUsersCon: \"\",\r\n        numOfUsersPar: \"\",\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.getStats();\r\n\r\n  }\r\n  componentWillUnmount() {\r\n  this._isMounted = false;\r\n}\r\n\r\n\r\n\r\n  getStats = () => {\r\n    axios.get(\"http://127.0.0.1:8000/stats/user-count/\"+ this.props.startDate + \"/\" + this.props.endDate + \"/\" + this.props.country + \"/\" + this.props.tenant).then(\r\n      res => {if(this._isMounted){this.setState({ numOfUsersMed : res.data.user_added_med[0].users, numOfUsersCon : res.data.user_added_condition[0].users , numOfUsersPar : res.data.user_added_parameter[0].users,})}});\r\n  };\r\n\r\n\r\n  render() {\r\n    if (this.props.value === 'meds') {\r\n      var category = 'User added Med'\r\n        var used = <h1 style={{color:\"#3CB371\"}}>{this.state.numOfUsersMed}</h1>;\r\n      } else if (this.props.value === 'conditions') {\r\n        category = 'User added Condition'\r\n        var used = <h1 style={{color:\"#3CB371\"}}>{this.state.numOfUsersCon}</h1>;\r\n      } else {\r\n        category = 'User added Parameter'\r\n        var used =<h1 style={{color:\"#3CB371\"}}>{this.state.numOfUsersPar}</h1>;\r\n      }\r\n\r\n    return (\r\n      <div style ={{display:\"inline\"}}>\r\n      {category}\r\n      {used}\r\n      </div>\r\n\r\n    );\r\n  }\r\n  }\r\n\r\n\r\nexport default UsedBy;\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/activity.js",["238","239"],"import React, { PureComponent } from 'react';\r\nimport axios from \"axios\";\r\nimport {\r\n  PieChart, Pie, Sector, Cell, Legend\r\n} from 'recharts';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Activity extends PureComponent {\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/c9pL8k61/';\r\n\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        num_of_parameters: [],\r\n    }\r\n  }\r\n\r\n\r\n    componentDidMount() {\r\n      this._isMounted = true;\r\n      this.getStats();\r\n\r\n    }\r\n    componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n\r\n  getStats = () => {\r\n      axios.get(\"http://127.0.0.1:8000/stats/feature-usage/\"+ this.props.startDate + \"/\" + this.props.endDate + \"/\" + this.props.country + \"/\" + this.props.tenant).then(res => {if(this._isMounted){this.setState({\r\n      num_of_parameters : res.data.activity[0],\r\n    })}});\r\n\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    var category = 'Activity';\r\n\r\n    var data = () => {\r\n        return [\r\n          { name: '0 days', value: this.state.num_of_parameters.parameters },\r\n          { name: '1-7 days', value: this.state.num_of_parameters.parameters2 },\r\n          { name: '8-31 days', value: this.state.num_of_parameters.parameters3 },\r\n          { name: 'Above 31 days', value: this.state.num_of_parameters.parameters4 },\r\n\r\n    ]\r\n      }\r\n\r\n\r\n    const COLORS = [\"#3CB371\", \"#C38D9E\", \"#E8A87C\", \"#6495ED\"];\r\n\r\n    const RADIAN = Math.PI / 180;\r\n\r\n    const renderCustomizedLabel = ({\r\n      cx, cy, midAngle, innerRadius, outerRadius, percent, index,\r\n    }) => {\r\n       const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n      return (\r\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n          {`${(percent * 100).toFixed(0)}%`}\r\n        </text>\r\n      );\r\n      };\r\n\r\n    return (\r\n      <div>\r\n      {category}\r\n      <PieChart width={300} height={267}>\r\n        <Pie data={data()}\r\n        cx=\"60%\"\r\n        cy=\"50%\"\r\n        labelLine={false}\r\n        label={renderCustomizedLabel}\r\n        outerRadius={80}\r\n        fill=\"#8884d8\"\r\n        dataKey=\"value\"\r\n        >\r\n        {\r\n            data().map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n        }\r\n        </Pie>\r\n        <Legend/>\r\n      </PieChart>\r\n      </div>\r\n    );\r\n  }\r\n  }\r\n\r\n\r\nexport default Activity;\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/usersAddedMed.js",["240"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass UsersAddedMed extends Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        numOfUsers: \"\",\r\n        registeredUsers: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.getStats();\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n  this._isMounted = false;\r\n}\r\n\r\n\r\n\r\n  getStats = () => {\r\n    axios.get(\"http://127.0.0.1:8000/stats/user-count/\"+ this.props.startDate + \"/\" + this.props.endDate + \"/\" + this.props.country + \"/\" + this.props.tenant).then(res => {   if(this._isMounted){this.setState({ numOfUsers : res.data.users_added_med[0].users, registeredUsers:res.data.registered_users[0].users})    }});\r\n  };\r\n\r\n\r\n  render() {\r\n    var registered_users = this.state.registeredUsers;\r\n    return (\r\n      <div style ={{display:\"inline\"}}>\r\n      <br/>\r\n      Added Med\r\n      <h1 style={{color:\"#3CB371\"}}>{this.state.numOfUsers} <p style={{display:\"inline\", color: \"grey\", }}>({Math.round(((this.state.numOfUsers / registered_users) * 100) * 10) / 10}% )</p></h1>\r\n      </div>\r\n\r\n    );\r\n  }\r\n  }\r\n\r\n\r\n\r\n\r\nexport default UsersAddedMed;\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/pieMed.js",["241","242"],"import React, { PureComponent } from 'react';\r\nimport axios from \"axios\";\r\nimport {\r\n  PieChart, Pie, Sector, Cell, Legend\r\n} from 'recharts';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass PieMed extends PureComponent {\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/c9pL8k61/';\r\n\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        num_of_meds: [],\r\n    }\r\n  }\r\n\r\n\r\n    componentDidMount() {\r\n      this._isMounted = true;\r\n      this.getStats();\r\n\r\n    }\r\n    componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n\r\n  getStats = () => {\r\n    axios.get(\"http://127.0.0.1:8000/stats/feature-usage/\"+ this.props.startDate + \"/\" + this.props.endDate + \"/\" + this.props.country + \"/\" + this.props.tenant).then(res => {if(this._isMounted){this.setState({\r\n      num_of_meds : res.data.num_of_meds[0],\r\n    })}});\r\n\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    var category = 'Med Count';\r\n\r\n    var data = () => {\r\n        return [\r\n        { name: '1-2', value: this.state.num_of_meds.meds },\r\n        { name: '3-4', value: this.state.num_of_meds.meds2 },\r\n        { name: '5-more', value: this.state.num_of_meds.meds3 },\r\n    ]\r\n      }\r\n\r\n\r\n    const COLORS = [\"#3CB371\", \"#C38D9E\", \"#E8A87C\"];\r\n\r\n    const RADIAN = Math.PI / 180;\r\n\r\n    const renderCustomizedLabel = ({\r\n      cx, cy, midAngle, innerRadius, outerRadius, percent, index,\r\n    }) => {\r\n       const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n      return (\r\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n          {`${(percent * 100).toFixed(0)}%`}\r\n        </text>\r\n      );\r\n      };\r\n\r\n    return (\r\n      <div>\r\n      {category}\r\n      <PieChart width={300} height={300}>\r\n        <Pie data={data()}\r\n        cx=\"60%\"\r\n        cy=\"50%\"\r\n        labelLine={false}\r\n        label={renderCustomizedLabel}\r\n        outerRadius={80}\r\n        fill=\"#8884d8\"\r\n        dataKey=\"value\"\r\n        >\r\n        {\r\n            data().map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n        }\r\n        </Pie>\r\n        <Legend/>\r\n      </PieChart>\r\n      </div>\r\n    );\r\n  }\r\n  }\r\n\r\n\r\nexport default PieMed;\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/usersAddedDisease.js",["243"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass UsersAddedDisease extends Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        numOfUsers: \"\",\r\n        registeredUsers: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.getStats();\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n  this._isMounted = false;\r\n}\r\n\r\n\r\n\r\n  getStats = () => {\r\n    axios.get(\"http://127.0.0.1:8000/stats/user-count/\"+ this.props.startDate + \"/\" + this.props.endDate + \"/\" + this.props.country + \"/\" + this.props.tenant).then(res => {   if(this._isMounted){this.setState({ numOfUsers : res.data.users_added_condition[0].users, registeredUsers:res.data.registered_users[0].users})    }});\r\n  };\r\n\r\n\r\n  render() {\r\n    var registered_users = this.state.registeredUsers;\r\n    return (\r\n      <div style ={{display:\"inline\"}}>\r\n      <br/>\r\n      Added Condition\r\n      <h1 style={{color:\"#3CB371\"}}>{this.state.numOfUsers} <p style={{display:\"inline\", color: \"grey\", }}>({Math.round(((this.state.numOfUsers / registered_users) * 100) * 10) / 10}% )</p></h1>\r\n      </div>\r\n\r\n    );\r\n  }\r\n  }\r\n\r\n\r\n\r\nexport default UsersAddedDisease;\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/pieParameter.js",["244","245"],"import React, { PureComponent } from 'react';\r\nimport axios from \"axios\";\r\nimport {\r\n  PieChart, Pie, Sector, Cell, Legend\r\n} from 'recharts';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass PieParameter extends PureComponent {\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/c9pL8k61/';\r\n\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        num_of_meds: [],\r\n        num_of_conditions: [],\r\n        num_of_parameters: [],\r\n    }\r\n  }\r\n\r\n\r\n    componentDidMount() {\r\n      this._isMounted = true;\r\n      this.getStats();\r\n\r\n    }\r\n    componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n\r\n  getStats = () => {\r\n\r\n    axios.get(\"http://127.0.0.1:8000/stats/feature-usage/\"+ this.props.startDate + \"/\" + this.props.endDate + \"/\" + this.props.country + \"/\" + this.props.tenant).then(res => {if(this._isMounted){this.setState({\r\n      num_of_parameters : res.data.num_of_parameters[0]\r\n    })}});\r\n\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    var category = 'Parameter Count';\r\n\r\n\r\n    var data = () => {\r\n        return [\r\n          { name: '1-2', value: this.state.num_of_parameters.parameters },\r\n          { name: '3-4', value: this.state.num_of_parameters.parameters2 },\r\n          { name: '5-more', value: this.state.num_of_parameters.parameters3 },\r\n      ]\r\n      }\r\n\r\n\r\n    const COLORS = [\"#3CB371\", \"#C38D9E\", \"#E8A87C\"];\r\n\r\n    const RADIAN = Math.PI / 180;\r\n\r\n    const renderCustomizedLabel = ({\r\n      cx, cy, midAngle, innerRadius, outerRadius, percent, index,\r\n    }) => {\r\n       const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n      return (\r\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n          {`${(percent * 100).toFixed(0)}%`}\r\n        </text>\r\n      );\r\n      };\r\n\r\n    return (\r\n      <div>\r\n      {category}\r\n      <PieChart width={300} height={300}>\r\n        <Pie data={data()}\r\n          cx=\"60%\"\r\n          cy=\"50%\"\r\n          labelLine={false}\r\n          label={renderCustomizedLabel}\r\n          outerRadius={80}\r\n          fill=\"#8884d8\"\r\n          dataKey=\"value\"\r\n        >\r\n        {\r\n            data().map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n        }\r\n        </Pie>\r\n        <Legend/>\r\n      </PieChart>\r\n      </div>\r\n    );\r\n  }\r\n  }\r\n\r\n\r\nexport default PieParameter;\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/topRankMeds.js",["246","247","248","249","250"],"import React, { PureComponent } from 'react';\r\nimport {\r\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\r\n} from 'recharts';\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\n\r\nclass TopRankMeds extends PureComponent {\r\n  _isMounted = false;\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/30763kr7/';\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      topMeds: [],\r\n      data:[],\r\n      registeredUsers: \"\",\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.getStats();\r\n  }\r\n  componentWillUnmount() {\r\n  this._isMounted = false;\r\n}\r\n\r\n\r\n\r\n  getStats = () => {\r\n    axios.get(\"http://127.0.0.1:8000/stats/feature-usage/\"+ this.props.startDate + \"/\" + this.props.endDate + \"/\" + this.props.country + \"/\" + this.props.tenant).then(res =>{if(this._isMounted){this.setState({topMeds:res.data.top_medicines, registeredUsers: res.data.registered_users[0].users\r\n  })}});\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    var registered_users = this.state.registeredUsers;\r\n\r\n    /*if (this.props.value == 'meds') {\r\n        var category = <h3>Top 10 Medicines</h3>;\r\n        var trData = this.state.topMeds;\r\n      } else if (this.props.value == 'conditions') {\r\n        var category = <h3>Top 10 Conditions</h3>;\r\n        var trData = this.state.topCont;\r\n      } else {\r\n        var category = <h3>Top 10 Parameters</h3>;\r\n        var trData = this.state.topParm;\r\n      }*/\r\n\r\n    var category = <h3>Leading Medicines</h3>;\r\n    var trData = this.state.topMeds;\r\n\r\n    let { data } = this.state;\r\n\r\n    var data2 = []\r\n    var rows = []\r\n\r\n    const topRanking = () => {\r\n      for (var i = 0; i < trData.length; i++) {\r\n        data2.push({ name: trData[i].name || '' , users: trData[i].count || ''})\r\n        rows.push({ name: trData[i].name, users: trData[i].count })\r\n      }\r\n    }\r\n    topRanking();\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div style={{color:\"#3CB371\", textAlign:\"center\",  fontFamily: \"Trebuchet MS\"}}>\r\n      <br/>\r\n      {category}\r\n      <div className=\"grid-container\">\r\n          <div className=\"grid-item\">\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n            <BarChart\r\n              data={data2}\r\n              margin={{\r\n                top: 50, right: 10, left: 10, bottom: 10,\r\n              }}\r\n            >\r\n              <CartesianGrid vertical={true} horizontal={true} strokeDasharray=\"3 3\"/>\r\n              <XAxis dataKey=\"name\" tick={false}/>\r\n              <YAxis/>\r\n              <Tooltip />\r\n\r\n              <Bar dataKey=\"users\" fill=\"#3CB371\" />,\r\n              </BarChart>\r\n              </ResponsiveContainer>\r\n\r\n              <TableContainer component={Paper}>\r\n                 <Table size=\"small\" aria-label=\"a dense table\">\r\n                   <TableBody>\r\n                     {rows.map((row) => (\r\n                       <TableRow key={row.name}>\r\n                         <TableCell component=\"th\" scope=\"row\" style={{color:\"#3CB371\", fontWeight:\"bold\"}}>\r\n                           {row.name} <p style={{display:\"inline\", color: \"grey\"}}>({Math.round(((row.users / registered_users) * 100) * 10) / 10}% )</p>\r\n                         </TableCell>\r\n                       </TableRow>\r\n                     ))}\r\n                   </TableBody>\r\n                 </Table>\r\n              </TableContainer>\r\n\r\n              </div>\r\n\r\n     </div>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n  }\r\n\r\n\r\n\r\nexport default TopRankMeds;\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/pieCondition.js",["251","252"],"import React, { PureComponent } from 'react';\r\nimport axios from \"axios\";\r\nimport {\r\n  PieChart, Pie, Sector, Cell, Legend\r\n} from 'recharts';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass PieCondition extends PureComponent {\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/c9pL8k61/';\r\n\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        num_of_meds: [],\r\n        num_of_conditions: [],\r\n        num_of_parameters: [],\r\n    }\r\n  }\r\n\r\n\r\n    componentDidMount() {\r\n      this._isMounted = true;\r\n      this.getStats();\r\n\r\n    }\r\n    componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n\r\n  getStats = () => {\r\n    axios.get(\"http://127.0.0.1:8000/stats/feature-usage/\"+ this.props.startDate + \"/\" + this.props.endDate + \"/\" + this.props.country + \"/\" + this.props.tenant).then(res => {if(this._isMounted){this.setState({\r\n      num_of_meds : res.data.num_of_meds[0],\r\n      num_of_conditions : res.data.num_of_conditions[0],\r\n      num_of_parameters : res.data.num_of_parameters[0]\r\n    })}});\r\n\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    var category = 'Condition Count';\r\n\r\n    var data = () => {\r\n        return [\r\n        { name: '1-2', value: this.state.num_of_conditions.conditions },\r\n        { name: '3-4', value: this.state.num_of_conditions.conditions2 },\r\n        { name: '5-more', value: this.state.num_of_conditions.conditions3 },\r\n      ]\r\n    }\r\n\r\n\r\n    const COLORS = [\"#3CB371\", \"#C38D9E\", \"#E8A87C\"];\r\n\r\n    const RADIAN = Math.PI / 180;\r\n\r\n    const renderCustomizedLabel = ({\r\n      cx, cy, midAngle, innerRadius, outerRadius, percent, index,\r\n    }) => {\r\n       const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n      return (\r\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n          {`${(percent * 100).toFixed(0)}%`}\r\n        </text>\r\n      );\r\n      };\r\n\r\n    return (\r\n      <div>\r\n      {category}\r\n      <PieChart width={300} height={300}>\r\n        <Pie data={data()}\r\n        cx=\"60%\"\r\n        cy=\"50%\"\r\n        labelLine={false}\r\n        label={renderCustomizedLabel}\r\n        outerRadius={80}\r\n        fill=\"#8884d8\"\r\n        dataKey=\"value\"\r\n        >\r\n        {\r\n            data().map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n        }\r\n        </Pie>\r\n        <Legend/>\r\n      </PieChart>\r\n      </div>\r\n    );\r\n  }\r\n  }\r\n\r\n\r\n\r\nexport default PieCondition;\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/location.js",["253","254","255","256","257","258"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Location extends Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        location: []\r\n    }\r\n  }\r\n\r\n\r\n    componentDidMount() {\r\n      this._isMounted = true;\r\n      this.getStats();\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n  getStats = () => {\r\n    axios.get(\"http://127.0.0.1:8000/stats/user-count/\"+ this.props.startDate + \"/\" + this.props.endDate).then(res => {   if(this._isMounted){this.setState({ location : res.data.location})}});\r\n  };\r\n\r\n\r\n  render() {\r\n    const rows = this.state.location;\r\n\r\n    if (this.props.value == 'meds') {\r\n        var a = 0;\r\n      } else if (this.props.value == 'conditions') {\r\n        var a = 550;\r\n      } else {\r\n        var a = 1200;\r\n      }\r\n\r\n\r\n    return (\r\n      <div style ={{display:\"inline\"}}>\r\n      Top Locations\r\n      <div></div>\r\n      <br/>\r\n      <div>\r\n      <TableContainer component={Paper}>\r\n         <Table size=\"small\" aria-label=\"a dense table\">\r\n           <TableBody>\r\n             {rows.map((row) => (\r\n               <TableRow key={row.country}>\r\n                 <TableCell component=\"th\" scope=\"row\" style={{color:\"#C38D9E\", fontWeight:\"bold\"}}>\r\n                   {row.country}\r\n                 </TableCell>\r\n                 <TableCell align=\"right\" style={{color:\"#E8A87C\", fontWeight:\"bold\"}}>{row.users - a}</TableCell>\r\n               </TableRow>\r\n             ))}\r\n           </TableBody>\r\n         </Table>\r\n        </TableContainer>\r\n\r\n      </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n  }\r\n\r\n\r\n  export default Location;\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/topRankConditions.js",["259","260","261","262","263"],"import React, { PureComponent } from 'react';\r\nimport {\r\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\r\n} from 'recharts';\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\n\r\nclass TopRankConditions extends PureComponent {\r\n  _isMounted = false;\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/30763kr7/';\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      topContd: [],\r\n      data:[],\r\n      registeredUsers: \"\",\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.getStats();\r\n  }\r\n  componentWillUnmount() {\r\n  this._isMounted = false;\r\n}\r\n\r\n\r\n\r\n  getStats = () => {\r\n    axios.get(\"http://127.0.0.1:8000/stats/feature-usage/\"+ this.props.startDate + \"/\" + this.props.endDate + \"/\" + this.props.country + \"/\" + this.props.tenant).then(res =>{if(this._isMounted){this.setState({topContd:res.data.top_conditions, registeredUsers: res.data.registered_users[0].users\r\n  })}});\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    var registered_users = this.state.registeredUsers;\r\n\r\n    /*if (this.props.value == 'meds') {\r\n        var category = <h3>Top 10 Medicines</h3>;\r\n        var trData = this.state.topMeds;\r\n      } else if (this.props.value == 'conditions') {\r\n        var category = <h3>Top 10 Conditions</h3>;\r\n        var trData = this.state.topCont;\r\n      } else {\r\n        var category = <h3>Top 10 Parameters</h3>;\r\n        var trData = this.state.topParm;\r\n      }*/\r\n\r\n    var category = <h3>Leading Conditions</h3>;\r\n    var trData = this.state.topContd;\r\n\r\n    let { data } = this.state;\r\n\r\n    var data2 = []\r\n    var rows = []\r\n\r\n    const topRanking = () => {\r\n      for (var i = 0; i < trData.length; i++) {\r\n        data2.push({ name: trData[i].name || '' , users: trData[i].count || ''})\r\n        rows.push({ name: trData[i].name,  users: trData[i].count })\r\n      }\r\n    }\r\n    topRanking();\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div style={{color:\"#3CB371\", textAlign:\"center\",  fontFamily: \"Trebuchet MS\"}}>\r\n      <br/>\r\n      {category}\r\n      <div className=\"grid-container\">\r\n          <div className=\"grid-item\">\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n            <BarChart\r\n              data={data2}\r\n              margin={{\r\n                top: 50, right: 10, left: 10, bottom: 10,\r\n              }}\r\n            >\r\n              <CartesianGrid vertical={true} horizontal={true} strokeDasharray=\"3 3\"/>\r\n              <XAxis dataKey=\"name\" tick={false}/>\r\n              <YAxis/>\r\n              <Tooltip />\r\n\r\n              <Bar dataKey=\"users\" fill=\"#3CB371\" />,\r\n              </BarChart>\r\n              </ResponsiveContainer>\r\n\r\n              <TableContainer component={Paper}>\r\n                 <Table size=\"small\" aria-label=\"a dense table\">\r\n                   <TableBody>\r\n                     {rows.map((row) => (\r\n                       <TableRow key={row.name}>\r\n                         <TableCell component=\"th\" scope=\"row\" style={{color:\"#3CB371\", fontWeight:\"bold\" }}>\r\n                           {row.name} <p style={{display:\"inline\", color: \"grey\"}}>({Math.round(((row.users / registered_users) * 100) * 10) / 10}% )</p>\r\n                         </TableCell>\r\n                       </TableRow>\r\n                     ))}\r\n                   </TableBody>\r\n                 </Table>\r\n                </TableContainer>\r\n\r\n              </div>\r\n\r\n     </div>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n  }\r\n\r\n\r\nexport default TopRankConditions;\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/topRankParameters.js",["264","265","266","267","268"],"import React, { PureComponent } from 'react';\r\nimport {\r\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\r\n} from 'recharts';\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\n\r\nclass TopRankParameters extends PureComponent {\r\n  _isMounted = false;\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/30763kr7/';\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      topParm: [],\r\n      data:[],\r\n      registeredUsers: \"\",\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.getStats();\r\n  }\r\n  componentWillUnmount() {\r\n  this._isMounted = false;\r\n}\r\n\r\n\r\n\r\n  getStats = () => {\r\n\r\n    axios.get(\"http://127.0.0.1:8000/stats/feature-usage/\"+ this.props.startDate + \"/\" + this.props.endDate + \"/\" + this.props.country + \"/\" + this.props.tenant).then(res =>{if(this._isMounted){this.setState({topParm:res.data.top_parameters, registeredUsers: res.data.registered_users[0].users\r\n  })}});\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    var registered_users = this.state.registeredUsers;\r\n\r\n    /*if (this.props.value == 'meds') {\r\n        var category = <h3>Top 10 Medicines</h3>;\r\n        var trData = this.state.topMeds;\r\n      } else if (this.props.value == 'conditions') {\r\n        var category = <h3>Top 10 Conditions</h3>;\r\n        var trData = this.state.topCont;\r\n      } else {\r\n        var category = <h3>Top 10 Parameters</h3>;\r\n        var trData = this.state.topParm;\r\n      }*/\r\n\r\n    var category = <h3>Leading Parameters</h3>;\r\n    var trData = this.state.topParm;\r\n\r\n    let { data } = this.state;\r\n\r\n    var data2 = []\r\n    var rows = []\r\n\r\n    const topRanking = () => {\r\n      for (var i = 0; i < trData.length; i++) {\r\n        data2.push({ name: trData[i].name || '' , users: trData[i].count || ''})\r\n        rows.push({ name: trData[i].name, users: trData[i].count })\r\n      }\r\n    }\r\n    topRanking();\r\n\r\n\r\n\r\n\r\n    return (\r\n      <div style={{color:\"#3CB371\", textAlign:\"center\",  fontFamily: \"Trebuchet MS\"}}>\r\n      <br/>\r\n      {category}\r\n      <div className=\"grid-container\">\r\n          <div className=\"grid-item\">\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n            <BarChart\r\n              data={data2}\r\n              margin={{\r\n                top: 50, right: 10, left: 10, bottom: 10,\r\n              }}\r\n            >\r\n              <CartesianGrid vertical={true} horizontal={true} strokeDasharray=\"3 3\"/>\r\n              <XAxis dataKey=\"name\" tick={false}/>\r\n              <YAxis/>\r\n              <Tooltip />\r\n              <Bar dataKey=\"users\" fill=\"#3CB371\" />,\r\n              </BarChart>\r\n              </ResponsiveContainer>\r\n\r\n\r\n              <TableContainer component={Paper}>\r\n                 <Table size=\"small\" aria-label=\"a dense table\">\r\n                   <TableBody>\r\n                     {rows.map((row) => (\r\n                       <TableRow key={row.name}>\r\n                         <TableCell component=\"th\" scope=\"row\" style={{color:\"#3CB371\", fontWeight:\"bold\"}}>\r\n                           {row.name} <p style={{display:\"inline\", color: \"grey\"}}>({Math.round(((row.users / registered_users) * 100) * 10) / 10}% )</p>\r\n                         </TableCell>\r\n                       </TableRow>\r\n                     ))}\r\n                   </TableBody>\r\n                 </Table>\r\n                </TableContainer>\r\n              </div>\r\n\r\n     </div>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n  }\r\n\r\n\r\nexport default TopRankParameters;\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/mobilePlatform.js",["269","270"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass MobilePlatform extends Component {\r\n  _isMounted=false;\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        platform: [],\r\n        registeredUsers: [],\r\n\r\n\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.getStats();\r\n\r\n  }\r\n  componentWillUnmount() {\r\n  this._isMounted = false;\r\n}\r\n\r\n\r\n  getStats = () => {\r\n    axios.get(\"http://127.0.0.1:8000/stats/user-count/\"+ this.props.startDate + \"/\" + this.props.endDate + \"/\" + this.props.country + \"/\" + this.props.tenant).then(res => {if(this._isMounted) { this.setState({ platform : res.data.mobile_platform , registeredUsers : res.data.registered_users[0].users}) } });\r\n  };\r\n\r\n\r\n  render() {\r\n    var rows = this.state.platform;\r\n    var registered_users = this.state.registeredUsers;\r\n\r\n    /*if (this.props.value === 'meds') {\r\n        var a = 0;\r\n      } else if (this.props.value === 'conditions') {\r\n        a = 0;\r\n      } else {\r\n        a = 0;\r\n      }*/\r\n\r\n\r\n    return (\r\n      <div style ={{display:\"inline\"}}>\r\n      Platforms\r\n      <div></div>\r\n      <br/>\r\n      <div>\r\n      <TableContainer component={Paper}>\r\n         <Table size=\"small\" aria-label=\"a dense table\">\r\n           <TableBody>\r\n             {rows.map((row) => (\r\n               <TableRow key={row.platform}>\r\n                 <TableCell component=\"th\" scope=\"row\" style={{color:\"#C38D9E\", fontWeight:\"bold\"}}>\r\n                   {row.platform}\r\n                 </TableCell>\r\n                 <TableCell align=\"right\" style={{color:\"#3CB371\", fontWeight:\"bold\"}}>{row.users}           <p style={{display:\"inline\", color: \"grey\", }}>({Math.round(((row.users / registered_users) * 100) * 10) / 10}% )</p></TableCell>\r\n               </TableRow>\r\n             ))}\r\n           </TableBody>\r\n         </Table>\r\n        </TableContainer>\r\n\r\n      </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n  }\r\n\r\nexport default MobilePlatform;\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/tab.js",["271","272","273","274","275","276","277","278","279","280","281","282"],"import React from 'react';\r\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport pillIcon from './images/pillIcon.png';\r\nimport vitalIcon from './images/vitalIcon.png';\r\nimport diseaseIcon from './images/diseaseIcon.png';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#3CB371\",\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n});\r\n\r\nfunction CenteredTabs(props) {\r\n  const classes = useStyles();\r\n  const [Tenantvalue, setTenantValue] = React.useState(\"Country\");\r\n\r\n  let [responseData, setResponseData] = React.useState('');\r\n  const fetchData = React.useCallback(() => {\r\n  axios({\r\n        \"method\": \"GET\",\r\n        \"url\": \"http://127.0.0.1:8000/stats/role\",\r\n        \"headers\": {\r\n          \"Content-Type\": \"application/json\",\r\n\r\n        }\r\n      })\r\n      .then((response) => {\r\n        setResponseData(response.data.role)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n    }, [])\r\n\r\n  React.useEffect(() => {\r\n    fetchData()\r\n  }, [fetchData])\r\n\r\n\r\n  const handleTenantChange = (event, newValue) => {\r\n    setTenantValue(newValue);\r\n  };\r\n\r\n  if (Tenantvalue === 'Country') {\r\n\r\n    var tabGroup =  <Tab value = \"USA\" label=\"USA\" />\r\n    var tabgr = <Tab  value = \"India\" label=\"India\" />\r\n    var tabgro = <Tab  value = \"Others\" label=\"Others\" />\r\n\r\n  }\r\n  else{\r\n    console.log(\"HEY\")\r\n    console.log(responseData)\r\n    if (responseData == 'show'){\r\n      var tabGroup =   <Tab  value = \"KYM\" label=\"KYM\" />\r\n      var tabgr = <Tab value= \"Thermofisher\" label=\"Thermofisher\" />\r\n      var tabgro = <Tab value=\"CGS\" label=\"CGS\" />\r\n      var tabgrou = <div></div>\r\n  } else{\r\n      var tabGroup =   <div></div>\r\n      var tabgr = <div></div>\r\n      var tabgro = <div></div>\r\n  }\r\n  }\r\n    return (\r\n    <ThemeProvider theme={theme}>\r\n    <div>\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={Tenantvalue}\r\n        onChange={handleTenantChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n\r\n        <Tab label = 'Country' value='Country'/><Tab label = 'Tenant' value='Tenant'/>\r\n\r\n      </Tabs>\r\n    </Paper>\r\n    </div>\r\n    <Paper className={classes.root}>\r\n      <Tabs\r\n        value={props.value}\r\n        onChange= {props.onHandleChange}\r\n        indicatorColor=\"primary\"\r\n        textColor=\"primary\"\r\n        centered\r\n      >\r\n      {tabgrou}\r\n      {tabGroup}\r\n      {tabgr}\r\n      {tabgro}\r\n      </Tabs>\r\n\r\n    </Paper>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default CenteredTabs;\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/indi.js",[],"/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/numberPie.js",["283","284"],"import React, { PureComponent } from 'react';\r\nimport axios from \"axios\";\r\nimport {\r\n  PieChart, Pie, Sector, Cell, Legend\r\n} from 'recharts';\r\nimport { connect } from \"react-redux\";\r\n\r\nclass NumberPie extends PureComponent {\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/c9pL8k61/';\r\n\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        num_of_meds: [],\r\n        num_of_conditions: [],\r\n        num_of_parameters: [],\r\n    }\r\n  }\r\n\r\n\r\n    componentDidMount() {\r\n      this._isMounted = true;\r\n      this.getStats();\r\n\r\n    }\r\n    componentWillUnmount() {\r\n    this._isMounted = false;\r\n  }\r\n\r\n\r\n  getStats = () => {\r\n    axios.get(\"http://127.0.0.1:8000/stats/feature-usage/\"+ this.props.startDate + \"/\" + this.props.endDate + \"/\" + this.props.country + \"/\" + this.props.tenant).then(res => {if(this._isMounted){this.setState({\r\n      num_of_meds : res.data.num_of_meds[0],\r\n      num_of_conditions : res.data.num_of_conditions[0],\r\n      num_of_parameters : res.data.num_of_parameters[0]\r\n    })}});\r\n\r\n\r\n  };\r\n\r\n\r\n  render() {\r\n    if (this.props.value === 'meds') {\r\n        var category = 'Med Count';\r\n      } else if (this.props.value === 'conditions') {\r\n         category = 'Condition Count';\r\n      } else {\r\n         category = 'Parameter Count';\r\n      }\r\n\r\n    var data = () => {\r\n      if (this.props.value === 'meds') {\r\n        return [\r\n        { name: '1-2', value: this.state.num_of_meds.meds },\r\n        { name: '3-4', value: this.state.num_of_meds.meds2 },\r\n        { name: '5-more', value: this.state.num_of_meds.meds3 },\r\n    ]}\r\n      else if (this.props.value === 'conditions') {\r\n        return [\r\n        { name: '1-2', value: this.state.num_of_conditions.conditions },\r\n        { name: '3-4', value: this.state.num_of_conditions.conditions2 },\r\n        { name: '5-more', value: this.state.num_of_conditions.conditions3 },\r\n      ]\r\n      }\r\n      else {\r\n        return [\r\n        { name: '1-2', value: this.state.num_of_parameters.parameters },\r\n        { name: '3-4', value: this.state.num_of_parameters.parameters2 },\r\n        { name: '5-more', value: this.state.num_of_parameters.parameters3 },\r\n      ]\r\n      }\r\n  }\r\n\r\n\r\n    const COLORS = [\"#3CB371\", \"#C38D9E\", \"#E8A87C\"];\r\n\r\n    const RADIAN = Math.PI / 180;\r\n\r\n    const renderCustomizedLabel = ({\r\n      cx, cy, midAngle, innerRadius, outerRadius, percent, index,\r\n    }) => {\r\n       const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n      return (\r\n        <text x={x} y={y} fill=\"white\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\r\n          {`${(percent * 100).toFixed(0)}%`}\r\n        </text>\r\n      );\r\n      };\r\n\r\n    return (\r\n      <div>\r\n      {category}\r\n      <PieChart width={220} height={255}>\r\n        <Pie data={data()}\r\n          cx={120}\r\n          cy={100}\r\n          labelLine={false}\r\n          label={renderCustomizedLabel}\r\n          outerRadius={80}\r\n          fill=\"#8884d8\"\r\n          dataKey=\"value\"\r\n        >\r\n        {\r\n            data().map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n        }\r\n        </Pie>\r\n        <Legend/>\r\n      </PieChart>\r\n      </div>\r\n    );\r\n  }\r\n  }\r\n\r\n\r\nexport default NumberPie;\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/activeUsers.js",["285"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass ActiveUsers extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        numOfUsers: \"\" //|| 0\r\n    }\r\n  }\r\n\r\n\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n        this.getStats();\r\n\r\n      }\r\n\r\n    componentWillUnmount() {\r\n      this._isMounted = false;\r\n    }\r\n\r\n  getStats = () => {\r\n    axios.get(\"http://127.0.0.1:8000/stats/user-count/\"+ this.props.startDate + \"/\" + this.props.endDate + \"/\" + this.props.country + \"/\" + this.props.tenant).then(res =>{ if(this._isMounted){this.setState({ numOfUsers : res.data.active_users})}});\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    var used = <h1 style={{color:\"#3CB371\"}}>{this.state.numOfUsers}</h1>;\r\n\r\n    return (\r\n      <div style ={{display:\"inline\", }}>\r\n      <br/>\r\n      Active Users\r\n      {used}\r\n      </div>\r\n\r\n    );\r\n  }\r\n  }\r\n\r\n\r\n\r\nexport default ActiveUsers;\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/registrations.js",["286"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass RegisteredUsers extends Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        numOfUsers: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.getStats();\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n  this._isMounted = false;\r\n}\r\n\r\n\r\n\r\n  getStats = () => {\r\n    axios.get(\"http://127.0.0.1:8000/stats/user-count/\"+ this.props.startDate + \"/\" + this.props.endDate + \"/\" + this.props.country + \"/\" + this.props.tenant).then(res => {   if(this._isMounted){this.setState({ numOfUsers : res.data.registered_users[0].users})    }});\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div style ={{display:\"inline\"}}>\r\n      <br/>\r\n      Registrations\r\n      <h1 style={{color:\"#3CB371\"}}>{this.state.numOfUsers}</h1>\r\n      </div>\r\n\r\n    );\r\n  }\r\n  }\r\n\r\n\r\n\r\nexport default RegisteredUsers;\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/topBar.js",["287","288","289","290","291","292","293"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport logo from './images/kymLogo.png'\r\nimport dp from './images/fb_pic.jpg'\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  //const handleChange = (event) => {\r\n  //  setAuth(event.target.checked);\r\n  //};\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{backgroundColor:\"#F8F8F8\", }}>\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" align=\"center\">\r\n              <img src={logo}/>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title} style={{color:\"#3CB371\", textAlign:\"center\"}} >\r\n          </Typography>\r\n          {auth && (\r\n            <div>\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}\r\n              >\r\n                <MenuItem onClick={handleClose}>Logout</MenuItem>\r\n              </Menu>\r\n            </div>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/charts.js",["294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313"],"import React, { PureComponent } from 'react';\r\nimport {\r\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\r\n} from 'recharts';\r\nimport axios from \"axios\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\n\r\nexport const BarBoth = (props) => {\r\n  return [\r\n    <Bar key=\"\" dataKey=\"Male\" fill=\"#C38D9E\" />,\r\n    <Bar key=\"\" dataKey=\"Female\" fill=\"#3CB371\" />,\r\n  ];\r\n};\r\n\r\nexport const BarOne = (props) => {\r\n  return [\r\n    <Bar key=\"\" dataKey=\"users\" fill=\"#3CB371\" />,\r\n  ];\r\n};\r\n\r\nclass Charts extends PureComponent {\r\n  _isMounted = false;\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/30763kr7/';\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      registeredUsers: \"\",\r\n      stats:{\r\n  \"gender_male\": [{\"count\": 0}],\r\n  \"gender_female\": [{\"count\": 0}],\r\n  \"gender_other\": [{\"count\": 0}],\r\n  \"gender_unknown\": [{\"count\": 0}],\r\n  \"age_group1_genderM\": [{\"count\": 0}],\r\n  \"age_group1_genderF\": [{\"count\": 0}],\r\n  \"age_group1_genderO\": [{\"count\": 0}],\r\n  \"age_group2_genderM\": [{\"count\": 0}],\r\n  \"age_group2_genderF\": [{\"count\": 0}],\r\n  \"age_group2_genderO\": [{\"count\": 0}],\r\n  \"age_group3_genderM\": [{\"count\": 0}],\r\n  \"age_group3_genderF\": [{\"count\": 0}],\r\n  \"age_group3_genderO\": [{\"count\": 0}],\r\n  \"age_group4_genderM\": [{\"count\": 0}],\r\n  \"age_group4_genderF\": [{  \"count\": 0}],\r\n  \"age_group4_genderO\": [{  \"count\": 0}],\r\n  \"age_group5_genderM\": [{  \"count\": 0  }],\r\n  \"age_group5_genderF\": [{\"count\": 0}],\r\n  \"age_group5_genderO\": [{  \"count\": 0}],\r\n  \"age_group6_genderM\": [{\"count\": 0}],\r\n  \"age_group6_genderF\": [{\"count\": 0}],\r\n  \"age_group6_genderO\": [\r\n    {\r\n      \"count\": 0\r\n    }\r\n  ],\r\n  \"age_0_20\": [\r\n    {\r\n      \"count\": 0\r\n    }\r\n  ],\r\n  \"age_20_30\": [\r\n    {\r\n      \"count\": 0\r\n    }\r\n  ],\r\n  \"age_30_40\": [\r\n    {\r\n      \"count\": 0\r\n    }\r\n  ],\r\n  \"age_40_50\": [\r\n    {\r\n      \"count\": 0\r\n    }\r\n  ],\r\n  \"age_50_60\": [\r\n    {\r\n      \"count\": 0\r\n    }\r\n  ],\r\n  \"age_60\": [\r\n    {\r\n      \"count\": 0\r\n    }\r\n  ],\r\n  \"age_unknown\": [\r\n  {\r\n    \"count\": 0\r\n  }\r\n],\r\n},\r\n      locations:[],\r\n      data: 'Both',\r\n      gender_button_color: '',\r\n      age_button_color:'',\r\n      both_button_color:'#3CB371'\r\n    }\r\n    this.switchToGender = this.switchToGender.bind(this);\r\n    this.switchToAge = this.switchToAge.bind(this);\r\n    this.switchToBoth = this.switchToBoth.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.getStats();\r\n\r\n  }\r\n  componentWillUnmount() {\r\n  this._isMounted = false;\r\n}\r\n\r\n  getStats = () => {\r\n    axios.get(\"http://127.0.0.1:8000/stats/demographic/\"+ this.props.startDate + \"/\" + this.props.endDate + \"/\" + this.props.country + \"/\" + this.props.tenant).then(res =>{if(this._isMounted){this.setState({ stats : res.data, registeredUsers: res.data.registered_users[0].users })}});\r\n  };\r\n\r\n\r\n  switchToGender = () => {\r\n        this.setState({\r\n          data: \"Gender\",\r\n          gender_button_color: '#3CB371',\r\n          age_button_color:'',\r\n          both_button_color:''});\r\n      };\r\n\r\n  switchToBoth = () => {\r\n       this.setState({\r\n         data: \"Both\",\r\n         gender_button_color: '',\r\n         age_button_color:'',\r\n         both_button_color:'#3CB371' });\r\n        };\r\n\r\n  switchToAge = () => {\r\n        this.setState({\r\n          data: \"Age\",\r\n          gender_button_color: '',\r\n          age_button_color:'#3CB371',\r\n          both_button_color:''\r\n       });\r\n            };\r\n\r\n  render() {\r\n    var gmc = this.state.stats.gender_male[0].count;\r\n    var registered_users = parseInt(this.state.registeredUsers);\r\n    const gender_data = [\r\n      {\r\n        stat: 'Male' + \" ( \" + (Math.round(((this.state.stats.gender_male[0].count / registered_users) * 100) * 10) / 10) + \"% )\",  users: this.state.stats.gender_male[0].count\r\n      },\r\n      {\r\n        stat: 'Female' + \" ( \" + (Math.round(((this.state.stats.gender_female[0].count / registered_users) * 100) * 10) / 10) + \"% )\", users: this.state.stats.gender_female[0].count\r\n      },\r\n      {\r\n      stat: 'Other' + \" ( \" + (Math.round(((this.state.stats.gender_other[0].count / registered_users) * 100) * 10) / 10) + \"% )\", users: this.state.stats.gender_other[0].count\r\n      },\r\n     {\r\n        stat: 'Unknown' + \" ( \" + (Math.round(((this.state.stats.gender_unknown[0].count / registered_users) * 100) * 10) / 10) + \"% )\", users: this.state.stats.gender_unknown[0].count\r\n      },\r\n\r\n\r\n    ];\r\n\r\n    const age_group_data = [\r\n      {\r\n        stat: '0-20' + \" (\" + (Math.round(((this.state.stats.age_0_20[0].count / registered_users) * 100) * 10) / 10) + \"%)\", users: this.state.stats.age_0_20[0].count\r\n      },\r\n      {\r\n        stat: '20-30'+ \" (\" + (Math.round(((this.state.stats.age_20_30[0].count / registered_users) * 100) * 10) / 10) + \"%)\", users: this.state.stats.age_20_30[0].count\r\n      },\r\n      {\r\n        stat: '30-40'+ \" (\" + (Math.round(((this.state.stats.age_30_40[0].count / registered_users) * 100) * 10) / 10) + \"%)\", users: this.state.stats.age_30_40[0].count\r\n      },\r\n      {\r\n        stat: '40-50'+ \" (\" + (Math.round(((this.state.stats.age_40_50[0].count / registered_users) * 100) * 10) / 10) + \"%)\", users: this.state.stats.age_40_50[0].count\r\n      },\r\n      {\r\n        stat: '50-60'+ \" (\" + (Math.round(((this.state.stats.age_50_60[0].count / registered_users) * 100) * 10) / 10) + \"%)\", users: this.state.stats.age_50_60[0].count\r\n      },\r\n      {\r\n        stat: '60-70'+ \" (\" + (Math.round(((this.state.stats.age_60[0].count / registered_users) * 100) * 10) / 10) + \"%)\", users: this.state.stats.age_60[0].count\r\n      },\r\n      {\r\n        stat: 'Unknown'+ \" (\" + (Math.round(((this.state.stats.age_unknown[0].count / registered_users) * 100) * 10) / 10) + \"%)\", users: this.state.stats.age_unknown[0].count\r\n        },\r\n\r\n    ];\r\n\r\n    const ageGroup_gender = [\r\n  {\r\n    stat: '0-20'+ \"(\" + (Math.round(((this.state.stats.age_group1_genderM[0].count / registered_users) * 100) * 10) / 10) + \",\"+ (Math.round(((this.state.stats.age_group1_genderF[0].count / registered_users) * 100) * 10) / 10)+ \")%\" , Male: this.state.stats.age_group1_genderM[0].count, Female: this.state.stats.age_group1_genderF[0].count\r\n  },\r\n  {\r\n    stat: '20-30'+ \"(\" + (Math.round(((this.state.stats.age_group2_genderM[0].count / registered_users) * 100) * 10) / 10) + \",\"+ (Math.round(((this.state.stats.age_group2_genderF[0].count / registered_users) * 100) * 10) / 10)+ \")%\" , Male: this.state.stats.age_group2_genderM[0].count, Female: this.state.stats.age_group2_genderF[0].count\r\n  },\r\n  {\r\n    stat: '30-40'+ \"(\" + (Math.round(((this.state.stats.age_group3_genderM[0].count / registered_users) * 100) * 10) / 10) + \",\"+ (Math.round(((this.state.stats.age_group3_genderF[0].count / registered_users) * 100) * 10) / 10)+ \")%\" , Male: this.state.stats.age_group3_genderM[0].count, Female: this.state.stats.age_group3_genderF[0].count\r\n  },\r\n  {\r\n    stat: '40-50'+ \"(\" + (Math.round(((this.state.stats.age_group4_genderM[0].count / registered_users) * 100) * 10) / 10) + \",\"+ (Math.round(((this.state.stats.age_group4_genderF[0].count / registered_users) * 100) * 10) / 10)+ \")%\" , Male: this.state.stats.age_group4_genderM[0].count, Female: this.state.stats.age_group4_genderF[0].count\r\n  },\r\n  {\r\n    stat: '50-60'+ \"(\" + (Math.round(((this.state.stats.age_group5_genderM[0].count / registered_users) * 100) * 10) / 10) + \",\"+ (Math.round(((this.state.stats.age_group5_genderF[0].count / registered_users) * 100) * 10) / 10)+ \")%\" , Male: this.state.stats.age_group5_genderM[0].count, Female: this.state.stats.age_group5_genderF[0].count\r\n  },\r\n  {\r\n    stat: '> 60'+ \"(\" + (Math.round(((this.state.stats.age_group6_genderM[0].count / registered_users) * 100) * 10) / 10) + \",\"+ (Math.round(((this.state.stats.age_group6_genderF[0].count / registered_users) * 100) * 10) / 10)+ \")%\" , Male: this.state.stats.age_group6_genderM[0].count, Female: this.state.stats.age_group6_genderF[0].count\r\n  },\r\n\r\n];\r\n\r\n\r\n    let {data} = this.state;\r\n\r\n    const selectAgeGender = () =>{\r\n      if(data === 'Both') {\r\n        return ageGroup_gender\r\n      } else if(data === 'Gender'){\r\n        return gender_data\r\n      }\r\n      else{\r\n        return age_group_data\r\n      }\r\n    }\r\n\r\n    const selectBar = () =>{\r\n      if(data === 'Both') {\r\n        return BarBoth()\r\n      }\r\n      else{\r\n        return BarOne()\r\n      }\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <div style={{color:\"#3CB371\", textAlign:\"center\",  fontFamily: \"Trebuchet MS\"}}>\r\n      <br/>\r\n      <h3>Demographic</h3>\r\n\r\n      <div className=\"grid-container\">\r\n          <div className=\"grid-item\">\r\n          <ButtonGroup aria-label=\"outlined primary button group\" width=\"80%\">\r\n            <Button onClick={this.switchToGender} value=\"Gender\" style={{\r\n                                                                          borderColor: this.state.gender_button_color}}>Gender</Button>\r\n            <Button onClick={this.switchToAge} value=\"Age\" style={{\r\n                                                                    borderColor: this.state.age_button_color}}>Age</Button>\r\n            <Button onClick={this.switchToBoth} value=\"Both\" style={{\r\n                                                                      borderColor: this.state.both_button_color}}>Both</Button>\r\n          </ButtonGroup>\r\n\r\n            <ResponsiveContainer width=\"100%\" height={200}>\r\n            <BarChart\r\n              data={selectAgeGender()}\r\n              margin={{\r\n                top: 50, right: 30, left: 10, bottom: 10,\r\n              }}\r\n            >\r\n              <CartesianGrid vertical={true} horizontal={true} strokeDasharray=\"3 3\"/>\r\n              <XAxis dataKey=\"stat\" tick={true}/>\r\n              <YAxis/>\r\n              <Tooltip />\r\n              <Legend />\r\n\r\n\r\n\r\n\r\n              {selectBar()}\r\n              </BarChart>\r\n              </ResponsiveContainer>\r\n\r\n              </div>\r\n\r\n     </div>\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n  }\r\n\r\n\r\n\r\nexport default Charts;\r\n","/Users/arnavmisra/Desktop/KYM/Test/kym_dashboard/src/components/usersAddedParameter.js",["314"],"import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass UsersAddedParameter extends Component {\r\n  _isMounted = false;\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n        numOfUsers: \"\",\r\n        registeredUsers: \"\"\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    this.getStats();\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n  this._isMounted = false;\r\n}\r\n\r\n\r\n\r\n  getStats = () => {\r\n\r\n    axios.get(\"http://127.0.0.1:8000/stats/user-count/\"+ this.props.startDate + \"/\" + this.props.endDate + \"/\" + this.props.country + \"/\" + this.props.tenant).then(res => {   if(this._isMounted){this.setState({ numOfUsers : res.data.users_added_parameter[0].users, registeredUsers:res.data.registered_users[0].users})    }});\r\n  };\r\n\r\n\r\n  render() {\r\n    var registered_users = this.state.registeredUsers;\r\n    return (\r\n      <div style ={{display:\"inline\"}}>\r\n      <br/>\r\n      Added Parameter\r\n      <h1 style={{color:\"#3CB371\"}}>{this.state.numOfUsers} <p style={{display:\"inline\", color: \"grey\", }}>({Math.round(((this.state.numOfUsers / registered_users) * 100) * 10) / 10}% )</p></h1>\r\n      </div>\r\n\r\n    );\r\n  }\r\n  }\r\n\r\n\r\n\r\nexport default UsersAddedParameter;\r\n",{"ruleId":"315","severity":1,"message":"316","line":1,"column":8,"nodeType":"317","messageId":"318","endLine":1,"endColumn":12},{"ruleId":"315","severity":1,"message":"319","line":26,"column":8,"nodeType":"317","messageId":"318","endLine":26,"endColumn":14},{"ruleId":"315","severity":1,"message":"320","line":27,"column":8,"nodeType":"317","messageId":"318","endLine":27,"endColumn":13},{"ruleId":"315","severity":1,"message":"321","line":59,"column":7,"nodeType":"317","messageId":"318","endLine":59,"endColumn":25},{"ruleId":"322","severity":1,"message":"323","line":92,"column":11,"nodeType":"317","messageId":"324","endLine":92,"endColumn":14},{"ruleId":"322","severity":1,"message":"325","line":93,"column":11,"nodeType":"317","messageId":"324","endLine":93,"endColumn":15},{"ruleId":"322","severity":1,"message":"326","line":94,"column":11,"nodeType":"317","messageId":"324","endLine":94,"endColumn":17},{"ruleId":"322","severity":1,"message":"327","line":95,"column":11,"nodeType":"317","messageId":"324","endLine":95,"endColumn":14},{"ruleId":"322","severity":1,"message":"328","line":96,"column":11,"nodeType":"317","messageId":"324","endLine":96,"endColumn":17},{"ruleId":"322","severity":1,"message":"329","line":97,"column":11,"nodeType":"317","messageId":"324","endLine":97,"endColumn":17},{"ruleId":"322","severity":1,"message":"330","line":98,"column":11,"nodeType":"317","messageId":"324","endLine":98,"endColumn":17},{"ruleId":"322","severity":1,"message":"331","line":99,"column":11,"nodeType":"317","messageId":"324","endLine":99,"endColumn":15},{"ruleId":"322","severity":1,"message":"332","line":100,"column":11,"nodeType":"317","messageId":"324","endLine":100,"endColumn":28},{"ruleId":"322","severity":1,"message":"333","line":101,"column":11,"nodeType":"317","messageId":"324","endLine":101,"endColumn":22},{"ruleId":"322","severity":1,"message":"334","line":102,"column":11,"nodeType":"317","messageId":"324","endLine":102,"endColumn":28},{"ruleId":"322","severity":1,"message":"335","line":103,"column":11,"nodeType":"317","messageId":"324","endLine":103,"endColumn":17},{"ruleId":"322","severity":1,"message":"336","line":104,"column":11,"nodeType":"317","messageId":"324","endLine":104,"endColumn":17},{"ruleId":"322","severity":1,"message":"337","line":105,"column":11,"nodeType":"317","messageId":"324","endLine":105,"endColumn":17},{"ruleId":"322","severity":1,"message":"338","line":106,"column":11,"nodeType":"317","messageId":"324","endLine":106,"endColumn":17},{"ruleId":"322","severity":1,"message":"339","line":107,"column":11,"nodeType":"317","messageId":"324","endLine":107,"endColumn":23},{"ruleId":"322","severity":1,"message":"340","line":108,"column":11,"nodeType":"317","messageId":"324","endLine":108,"endColumn":23},{"ruleId":"322","severity":1,"message":"341","line":109,"column":11,"nodeType":"317","messageId":"324","endLine":109,"endColumn":19},{"ruleId":"322","severity":1,"message":"323","line":111,"column":11,"nodeType":"317","messageId":"324","endLine":111,"endColumn":14},{"ruleId":"322","severity":1,"message":"325","line":112,"column":11,"nodeType":"317","messageId":"324","endLine":112,"endColumn":15},{"ruleId":"322","severity":1,"message":"326","line":113,"column":11,"nodeType":"317","messageId":"324","endLine":113,"endColumn":17},{"ruleId":"322","severity":1,"message":"327","line":114,"column":11,"nodeType":"317","messageId":"324","endLine":114,"endColumn":14},{"ruleId":"322","severity":1,"message":"328","line":115,"column":11,"nodeType":"317","messageId":"324","endLine":115,"endColumn":17},{"ruleId":"322","severity":1,"message":"329","line":116,"column":11,"nodeType":"317","messageId":"324","endLine":116,"endColumn":17},{"ruleId":"322","severity":1,"message":"330","line":117,"column":11,"nodeType":"317","messageId":"324","endLine":117,"endColumn":17},{"ruleId":"322","severity":1,"message":"331","line":118,"column":11,"nodeType":"317","messageId":"324","endLine":118,"endColumn":15},{"ruleId":"322","severity":1,"message":"332","line":119,"column":11,"nodeType":"317","messageId":"324","endLine":119,"endColumn":28},{"ruleId":"322","severity":1,"message":"333","line":120,"column":11,"nodeType":"317","messageId":"324","endLine":120,"endColumn":22},{"ruleId":"322","severity":1,"message":"334","line":121,"column":11,"nodeType":"317","messageId":"324","endLine":121,"endColumn":28},{"ruleId":"322","severity":1,"message":"335","line":122,"column":11,"nodeType":"317","messageId":"324","endLine":122,"endColumn":17},{"ruleId":"322","severity":1,"message":"336","line":123,"column":11,"nodeType":"317","messageId":"324","endLine":123,"endColumn":17},{"ruleId":"322","severity":1,"message":"337","line":124,"column":11,"nodeType":"317","messageId":"324","endLine":124,"endColumn":17},{"ruleId":"322","severity":1,"message":"338","line":125,"column":11,"nodeType":"317","messageId":"324","endLine":125,"endColumn":17},{"ruleId":"322","severity":1,"message":"339","line":126,"column":11,"nodeType":"317","messageId":"324","endLine":126,"endColumn":23},{"ruleId":"322","severity":1,"message":"340","line":127,"column":11,"nodeType":"317","messageId":"324","endLine":127,"endColumn":23},{"ruleId":"322","severity":1,"message":"341","line":128,"column":11,"nodeType":"317","messageId":"324","endLine":128,"endColumn":19},{"ruleId":"322","severity":1,"message":"323","line":130,"column":11,"nodeType":"317","messageId":"324","endLine":130,"endColumn":14},{"ruleId":"322","severity":1,"message":"325","line":131,"column":11,"nodeType":"317","messageId":"324","endLine":131,"endColumn":15},{"ruleId":"322","severity":1,"message":"326","line":132,"column":11,"nodeType":"317","messageId":"324","endLine":132,"endColumn":17},{"ruleId":"322","severity":1,"message":"327","line":133,"column":11,"nodeType":"317","messageId":"324","endLine":133,"endColumn":14},{"ruleId":"322","severity":1,"message":"328","line":134,"column":11,"nodeType":"317","messageId":"324","endLine":134,"endColumn":17},{"ruleId":"322","severity":1,"message":"329","line":135,"column":11,"nodeType":"317","messageId":"324","endLine":135,"endColumn":17},{"ruleId":"322","severity":1,"message":"330","line":136,"column":11,"nodeType":"317","messageId":"324","endLine":136,"endColumn":17},{"ruleId":"322","severity":1,"message":"331","line":137,"column":11,"nodeType":"317","messageId":"324","endLine":137,"endColumn":15},{"ruleId":"322","severity":1,"message":"332","line":138,"column":11,"nodeType":"317","messageId":"324","endLine":138,"endColumn":28},{"ruleId":"322","severity":1,"message":"333","line":139,"column":11,"nodeType":"317","messageId":"324","endLine":139,"endColumn":22},{"ruleId":"322","severity":1,"message":"334","line":140,"column":11,"nodeType":"317","messageId":"324","endLine":140,"endColumn":28},{"ruleId":"322","severity":1,"message":"335","line":141,"column":11,"nodeType":"317","messageId":"324","endLine":141,"endColumn":17},{"ruleId":"322","severity":1,"message":"336","line":142,"column":11,"nodeType":"317","messageId":"324","endLine":142,"endColumn":17},{"ruleId":"322","severity":1,"message":"337","line":143,"column":11,"nodeType":"317","messageId":"324","endLine":143,"endColumn":17},{"ruleId":"322","severity":1,"message":"338","line":144,"column":11,"nodeType":"317","messageId":"324","endLine":144,"endColumn":17},{"ruleId":"322","severity":1,"message":"339","line":145,"column":11,"nodeType":"317","messageId":"324","endLine":145,"endColumn":23},{"ruleId":"322","severity":1,"message":"340","line":146,"column":11,"nodeType":"317","messageId":"324","endLine":146,"endColumn":23},{"ruleId":"322","severity":1,"message":"341","line":147,"column":11,"nodeType":"317","messageId":"324","endLine":147,"endColumn":19},{"ruleId":"322","severity":1,"message":"323","line":149,"column":11,"nodeType":"317","messageId":"324","endLine":149,"endColumn":14},{"ruleId":"322","severity":1,"message":"325","line":150,"column":11,"nodeType":"317","messageId":"324","endLine":150,"endColumn":15},{"ruleId":"322","severity":1,"message":"326","line":151,"column":11,"nodeType":"317","messageId":"324","endLine":151,"endColumn":17},{"ruleId":"322","severity":1,"message":"327","line":152,"column":11,"nodeType":"317","messageId":"324","endLine":152,"endColumn":14},{"ruleId":"322","severity":1,"message":"328","line":153,"column":11,"nodeType":"317","messageId":"324","endLine":153,"endColumn":17},{"ruleId":"322","severity":1,"message":"329","line":154,"column":11,"nodeType":"317","messageId":"324","endLine":154,"endColumn":17},{"ruleId":"322","severity":1,"message":"330","line":155,"column":11,"nodeType":"317","messageId":"324","endLine":155,"endColumn":17},{"ruleId":"322","severity":1,"message":"331","line":156,"column":11,"nodeType":"317","messageId":"324","endLine":156,"endColumn":15},{"ruleId":"322","severity":1,"message":"332","line":157,"column":11,"nodeType":"317","messageId":"324","endLine":157,"endColumn":28},{"ruleId":"322","severity":1,"message":"333","line":158,"column":11,"nodeType":"317","messageId":"324","endLine":158,"endColumn":22},{"ruleId":"322","severity":1,"message":"334","line":159,"column":11,"nodeType":"317","messageId":"324","endLine":159,"endColumn":28},{"ruleId":"322","severity":1,"message":"335","line":160,"column":11,"nodeType":"317","messageId":"324","endLine":160,"endColumn":17},{"ruleId":"322","severity":1,"message":"336","line":161,"column":11,"nodeType":"317","messageId":"324","endLine":161,"endColumn":17},{"ruleId":"322","severity":1,"message":"337","line":162,"column":11,"nodeType":"317","messageId":"324","endLine":162,"endColumn":17},{"ruleId":"322","severity":1,"message":"338","line":163,"column":11,"nodeType":"317","messageId":"324","endLine":163,"endColumn":17},{"ruleId":"322","severity":1,"message":"339","line":164,"column":11,"nodeType":"317","messageId":"324","endLine":164,"endColumn":23},{"ruleId":"322","severity":1,"message":"340","line":165,"column":11,"nodeType":"317","messageId":"324","endLine":165,"endColumn":23},{"ruleId":"322","severity":1,"message":"341","line":166,"column":11,"nodeType":"317","messageId":"324","endLine":166,"endColumn":19},{"ruleId":"322","severity":1,"message":"323","line":168,"column":11,"nodeType":"317","messageId":"324","endLine":168,"endColumn":14},{"ruleId":"322","severity":1,"message":"325","line":169,"column":11,"nodeType":"317","messageId":"324","endLine":169,"endColumn":15},{"ruleId":"322","severity":1,"message":"326","line":170,"column":11,"nodeType":"317","messageId":"324","endLine":170,"endColumn":17},{"ruleId":"322","severity":1,"message":"327","line":171,"column":11,"nodeType":"317","messageId":"324","endLine":171,"endColumn":14},{"ruleId":"322","severity":1,"message":"328","line":172,"column":11,"nodeType":"317","messageId":"324","endLine":172,"endColumn":17},{"ruleId":"322","severity":1,"message":"329","line":173,"column":11,"nodeType":"317","messageId":"324","endLine":173,"endColumn":17},{"ruleId":"322","severity":1,"message":"330","line":174,"column":11,"nodeType":"317","messageId":"324","endLine":174,"endColumn":17},{"ruleId":"322","severity":1,"message":"331","line":175,"column":11,"nodeType":"317","messageId":"324","endLine":175,"endColumn":15},{"ruleId":"322","severity":1,"message":"332","line":176,"column":11,"nodeType":"317","messageId":"324","endLine":176,"endColumn":28},{"ruleId":"322","severity":1,"message":"333","line":177,"column":11,"nodeType":"317","messageId":"324","endLine":177,"endColumn":22},{"ruleId":"322","severity":1,"message":"334","line":178,"column":11,"nodeType":"317","messageId":"324","endLine":178,"endColumn":28},{"ruleId":"322","severity":1,"message":"335","line":179,"column":11,"nodeType":"317","messageId":"324","endLine":179,"endColumn":17},{"ruleId":"322","severity":1,"message":"336","line":180,"column":11,"nodeType":"317","messageId":"324","endLine":180,"endColumn":17},{"ruleId":"322","severity":1,"message":"337","line":181,"column":11,"nodeType":"317","messageId":"324","endLine":181,"endColumn":17},{"ruleId":"322","severity":1,"message":"338","line":182,"column":11,"nodeType":"317","messageId":"324","endLine":182,"endColumn":17},{"ruleId":"322","severity":1,"message":"339","line":183,"column":11,"nodeType":"317","messageId":"324","endLine":183,"endColumn":23},{"ruleId":"322","severity":1,"message":"340","line":184,"column":11,"nodeType":"317","messageId":"324","endLine":184,"endColumn":23},{"ruleId":"322","severity":1,"message":"341","line":185,"column":11,"nodeType":"317","messageId":"324","endLine":185,"endColumn":19},{"ruleId":"322","severity":1,"message":"323","line":187,"column":11,"nodeType":"317","messageId":"324","endLine":187,"endColumn":14},{"ruleId":"322","severity":1,"message":"325","line":188,"column":11,"nodeType":"317","messageId":"324","endLine":188,"endColumn":15},{"ruleId":"315","severity":1,"message":"342","line":188,"column":11,"nodeType":"317","messageId":"318","endLine":188,"endColumn":15},{"ruleId":"322","severity":1,"message":"326","line":189,"column":11,"nodeType":"317","messageId":"324","endLine":189,"endColumn":17},{"ruleId":"322","severity":1,"message":"327","line":190,"column":11,"nodeType":"317","messageId":"324","endLine":190,"endColumn":14},{"ruleId":"322","severity":1,"message":"328","line":191,"column":11,"nodeType":"317","messageId":"324","endLine":191,"endColumn":17},{"ruleId":"322","severity":1,"message":"329","line":192,"column":11,"nodeType":"317","messageId":"324","endLine":192,"endColumn":17},{"ruleId":"315","severity":1,"message":"343","line":192,"column":11,"nodeType":"317","messageId":"318","endLine":192,"endColumn":17},{"ruleId":"322","severity":1,"message":"330","line":193,"column":11,"nodeType":"317","messageId":"324","endLine":193,"endColumn":17},{"ruleId":"315","severity":1,"message":"344","line":193,"column":11,"nodeType":"317","messageId":"318","endLine":193,"endColumn":17},{"ruleId":"322","severity":1,"message":"331","line":194,"column":11,"nodeType":"317","messageId":"324","endLine":194,"endColumn":15},{"ruleId":"315","severity":1,"message":"345","line":194,"column":11,"nodeType":"317","messageId":"318","endLine":194,"endColumn":15},{"ruleId":"322","severity":1,"message":"333","line":195,"column":11,"nodeType":"317","messageId":"324","endLine":195,"endColumn":22},{"ruleId":"322","severity":1,"message":"332","line":196,"column":11,"nodeType":"317","messageId":"324","endLine":196,"endColumn":28},{"ruleId":"322","severity":1,"message":"334","line":197,"column":11,"nodeType":"317","messageId":"324","endLine":197,"endColumn":28},{"ruleId":"322","severity":1,"message":"335","line":198,"column":11,"nodeType":"317","messageId":"324","endLine":198,"endColumn":17},{"ruleId":"322","severity":1,"message":"336","line":199,"column":11,"nodeType":"317","messageId":"324","endLine":199,"endColumn":17},{"ruleId":"322","severity":1,"message":"337","line":200,"column":11,"nodeType":"317","messageId":"324","endLine":200,"endColumn":17},{"ruleId":"322","severity":1,"message":"338","line":201,"column":11,"nodeType":"317","messageId":"324","endLine":201,"endColumn":17},{"ruleId":"322","severity":1,"message":"339","line":202,"column":11,"nodeType":"317","messageId":"324","endLine":202,"endColumn":23},{"ruleId":"322","severity":1,"message":"340","line":203,"column":11,"nodeType":"317","messageId":"324","endLine":203,"endColumn":23},{"ruleId":"322","severity":1,"message":"341","line":204,"column":11,"nodeType":"317","messageId":"324","endLine":204,"endColumn":19},{"ruleId":"315","severity":1,"message":"346","line":3,"column":10,"nodeType":"317","messageId":"318","endLine":3,"endColumn":17},{"ruleId":"322","severity":1,"message":"325","line":39,"column":13,"nodeType":"317","messageId":"324","endLine":39,"endColumn":17},{"ruleId":"322","severity":1,"message":"325","line":42,"column":13,"nodeType":"317","messageId":"324","endLine":42,"endColumn":17},{"ruleId":"315","severity":1,"message":"347","line":4,"column":18,"nodeType":"317","messageId":"318","endLine":4,"endColumn":24},{"ruleId":"315","severity":1,"message":"346","line":6,"column":10,"nodeType":"317","messageId":"318","endLine":6,"endColumn":17},{"ruleId":"315","severity":1,"message":"346","line":3,"column":10,"nodeType":"317","messageId":"318","endLine":3,"endColumn":17},{"ruleId":"315","severity":1,"message":"347","line":4,"column":18,"nodeType":"317","messageId":"318","endLine":4,"endColumn":24},{"ruleId":"315","severity":1,"message":"346","line":6,"column":10,"nodeType":"317","messageId":"318","endLine":6,"endColumn":17},{"ruleId":"315","severity":1,"message":"346","line":3,"column":10,"nodeType":"317","messageId":"318","endLine":3,"endColumn":17},{"ruleId":"315","severity":1,"message":"347","line":4,"column":18,"nodeType":"317","messageId":"318","endLine":4,"endColumn":24},{"ruleId":"315","severity":1,"message":"346","line":6,"column":10,"nodeType":"317","messageId":"318","endLine":6,"endColumn":17},{"ruleId":"315","severity":1,"message":"348","line":3,"column":18,"nodeType":"317","messageId":"318","endLine":3,"endColumn":22},{"ruleId":"315","severity":1,"message":"349","line":3,"column":62,"nodeType":"317","messageId":"318","endLine":3,"endColumn":68},{"ruleId":"315","severity":1,"message":"346","line":6,"column":10,"nodeType":"317","messageId":"318","endLine":6,"endColumn":17},{"ruleId":"315","severity":1,"message":"350","line":11,"column":8,"nodeType":"317","messageId":"318","endLine":11,"endColumn":17},{"ruleId":"315","severity":1,"message":"351","line":63,"column":11,"nodeType":"317","messageId":"318","endLine":63,"endColumn":15},{"ruleId":"315","severity":1,"message":"347","line":4,"column":18,"nodeType":"317","messageId":"318","endLine":4,"endColumn":24},{"ruleId":"315","severity":1,"message":"346","line":6,"column":10,"nodeType":"317","messageId":"318","endLine":6,"endColumn":17},{"ruleId":"315","severity":1,"message":"350","line":7,"column":8,"nodeType":"317","messageId":"318","endLine":7,"endColumn":17},{"ruleId":"315","severity":1,"message":"346","line":10,"column":10,"nodeType":"317","messageId":"318","endLine":10,"endColumn":17},{"ruleId":"352","severity":1,"message":"353","line":40,"column":26,"nodeType":"354","messageId":"355","endLine":40,"endColumn":28},{"ruleId":"352","severity":1,"message":"353","line":42,"column":35,"nodeType":"354","messageId":"355","endLine":42,"endColumn":37},{"ruleId":"322","severity":1,"message":"356","line":43,"column":13,"nodeType":"317","messageId":"324","endLine":43,"endColumn":14},{"ruleId":"322","severity":1,"message":"356","line":45,"column":13,"nodeType":"317","messageId":"324","endLine":45,"endColumn":14},{"ruleId":"315","severity":1,"message":"348","line":3,"column":18,"nodeType":"317","messageId":"318","endLine":3,"endColumn":22},{"ruleId":"315","severity":1,"message":"349","line":3,"column":62,"nodeType":"317","messageId":"318","endLine":3,"endColumn":68},{"ruleId":"315","severity":1,"message":"346","line":6,"column":10,"nodeType":"317","messageId":"318","endLine":6,"endColumn":17},{"ruleId":"315","severity":1,"message":"350","line":11,"column":8,"nodeType":"317","messageId":"318","endLine":11,"endColumn":17},{"ruleId":"315","severity":1,"message":"351","line":63,"column":11,"nodeType":"317","messageId":"318","endLine":63,"endColumn":15},{"ruleId":"315","severity":1,"message":"348","line":3,"column":18,"nodeType":"317","messageId":"318","endLine":3,"endColumn":22},{"ruleId":"315","severity":1,"message":"349","line":3,"column":62,"nodeType":"317","messageId":"318","endLine":3,"endColumn":68},{"ruleId":"315","severity":1,"message":"346","line":6,"column":10,"nodeType":"317","messageId":"318","endLine":6,"endColumn":17},{"ruleId":"315","severity":1,"message":"350","line":11,"column":8,"nodeType":"317","messageId":"318","endLine":11,"endColumn":17},{"ruleId":"315","severity":1,"message":"351","line":64,"column":11,"nodeType":"317","messageId":"318","endLine":64,"endColumn":15},{"ruleId":"315","severity":1,"message":"350","line":7,"column":8,"nodeType":"317","messageId":"318","endLine":7,"endColumn":17},{"ruleId":"315","severity":1,"message":"346","line":10,"column":10,"nodeType":"317","messageId":"318","endLine":10,"endColumn":17},{"ruleId":"315","severity":1,"message":"357","line":6,"column":8,"nodeType":"317","messageId":"318","endLine":6,"endColumn":16},{"ruleId":"315","severity":1,"message":"358","line":7,"column":8,"nodeType":"317","messageId":"318","endLine":7,"endColumn":17},{"ruleId":"315","severity":1,"message":"359","line":8,"column":8,"nodeType":"317","messageId":"318","endLine":8,"endColumn":19},{"ruleId":"315","severity":1,"message":"360","line":9,"column":8,"nodeType":"317","messageId":"318","endLine":9,"endColumn":14},{"ruleId":"315","severity":1,"message":"346","line":11,"column":10,"nodeType":"317","messageId":"318","endLine":11,"endColumn":17},{"ruleId":"352","severity":1,"message":"353","line":68,"column":22,"nodeType":"354","messageId":"355","endLine":68,"endColumn":24},{"ruleId":"322","severity":1,"message":"361","line":69,"column":11,"nodeType":"317","messageId":"324","endLine":69,"endColumn":19},{"ruleId":"322","severity":1,"message":"362","line":70,"column":11,"nodeType":"317","messageId":"324","endLine":70,"endColumn":16},{"ruleId":"322","severity":1,"message":"363","line":71,"column":11,"nodeType":"317","messageId":"324","endLine":71,"endColumn":17},{"ruleId":"322","severity":1,"message":"361","line":74,"column":11,"nodeType":"317","messageId":"324","endLine":74,"endColumn":19},{"ruleId":"322","severity":1,"message":"362","line":75,"column":11,"nodeType":"317","messageId":"324","endLine":75,"endColumn":16},{"ruleId":"322","severity":1,"message":"363","line":76,"column":11,"nodeType":"317","messageId":"324","endLine":76,"endColumn":17},{"ruleId":"315","severity":1,"message":"347","line":4,"column":18,"nodeType":"317","messageId":"318","endLine":4,"endColumn":24},{"ruleId":"315","severity":1,"message":"346","line":6,"column":10,"nodeType":"317","messageId":"318","endLine":6,"endColumn":17},{"ruleId":"315","severity":1,"message":"346","line":3,"column":10,"nodeType":"317","messageId":"318","endLine":3,"endColumn":17},{"ruleId":"315","severity":1,"message":"346","line":3,"column":10,"nodeType":"317","messageId":"318","endLine":3,"endColumn":17},{"ruleId":"315","severity":1,"message":"364","line":7,"column":8,"nodeType":"317","messageId":"318","endLine":7,"endColumn":14},{"ruleId":"315","severity":1,"message":"365","line":8,"column":8,"nodeType":"317","messageId":"318","endLine":8,"endColumn":24},{"ruleId":"315","severity":1,"message":"366","line":9,"column":8,"nodeType":"317","messageId":"318","endLine":9,"endColumn":17},{"ruleId":"315","severity":1,"message":"367","line":13,"column":8,"nodeType":"317","messageId":"318","endLine":13,"endColumn":10},{"ruleId":"315","severity":1,"message":"360","line":14,"column":8,"nodeType":"317","messageId":"318","endLine":14,"endColumn":14},{"ruleId":"315","severity":1,"message":"368","line":30,"column":16,"nodeType":"317","messageId":"318","endLine":30,"endColumn":23},{"ruleId":"369","severity":1,"message":"370","line":51,"column":15,"nodeType":"371","endLine":51,"endColumn":32},{"ruleId":"315","severity":1,"message":"348","line":3,"column":18,"nodeType":"317","messageId":"318","endLine":3,"endColumn":22},{"ruleId":"315","severity":1,"message":"346","line":8,"column":10,"nodeType":"317","messageId":"318","endLine":8,"endColumn":17},{"ruleId":"315","severity":1,"message":"372","line":147,"column":9,"nodeType":"317","messageId":"318","endLine":147,"endColumn":12},{"ruleId":"373","severity":1,"message":"374","line":151,"column":22,"nodeType":"354","messageId":"375","endLine":151,"endColumn":23},{"ruleId":"373","severity":1,"message":"374","line":154,"column":24,"nodeType":"354","messageId":"375","endLine":154,"endColumn":25},{"ruleId":"373","severity":1,"message":"374","line":157,"column":21,"nodeType":"354","messageId":"375","endLine":157,"endColumn":22},{"ruleId":"373","severity":1,"message":"374","line":160,"column":25,"nodeType":"354","messageId":"375","endLine":160,"endColumn":26},{"ruleId":"373","severity":1,"message":"374","line":168,"column":22,"nodeType":"354","messageId":"375","endLine":168,"endColumn":23},{"ruleId":"373","severity":1,"message":"374","line":171,"column":22,"nodeType":"354","messageId":"375","endLine":171,"endColumn":23},{"ruleId":"373","severity":1,"message":"374","line":174,"column":22,"nodeType":"354","messageId":"375","endLine":174,"endColumn":23},{"ruleId":"373","severity":1,"message":"374","line":177,"column":22,"nodeType":"354","messageId":"375","endLine":177,"endColumn":23},{"ruleId":"373","severity":1,"message":"374","line":180,"column":22,"nodeType":"354","messageId":"375","endLine":180,"endColumn":23},{"ruleId":"373","severity":1,"message":"374","line":183,"column":22,"nodeType":"354","messageId":"375","endLine":183,"endColumn":23},{"ruleId":"373","severity":1,"message":"374","line":186,"column":24,"nodeType":"354","messageId":"375","endLine":186,"endColumn":25},{"ruleId":"373","severity":1,"message":"374","line":193,"column":17,"nodeType":"354","messageId":"375","endLine":193,"endColumn":18},{"ruleId":"373","severity":1,"message":"374","line":196,"column":18,"nodeType":"354","messageId":"375","endLine":196,"endColumn":19},{"ruleId":"373","severity":1,"message":"374","line":199,"column":18,"nodeType":"354","messageId":"375","endLine":199,"endColumn":19},{"ruleId":"373","severity":1,"message":"374","line":202,"column":18,"nodeType":"354","messageId":"375","endLine":202,"endColumn":19},{"ruleId":"373","severity":1,"message":"374","line":205,"column":18,"nodeType":"354","messageId":"375","endLine":205,"endColumn":19},{"ruleId":"373","severity":1,"message":"374","line":208,"column":17,"nodeType":"354","messageId":"375","endLine":208,"endColumn":18},{"ruleId":"315","severity":1,"message":"346","line":3,"column":10,"nodeType":"317","messageId":"318","endLine":3,"endColumn":17},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'axios' is defined but never used.","'choiceSelectedDate' is assigned a value but never used.","no-redeclare","'reg' is already defined.","redeclared","'used' is already defined.","'active' is already defined.","'plt' is already defined.","'charts' is already defined.","'locate' is already defined.","'numpie' is already defined.","'indi' is already defined.","'topRankConditions' is already defined.","'topRankMeds' is already defined.","'topRankParameters' is already defined.","'medadd' is already defined.","'disadd' is already defined.","'paradd' is already defined.","'piemed' is already defined.","'piecondition' is already defined.","'pieparameter' is already defined.","'activity' is already defined.","'used' is assigned a value but never used.","'locate' is assigned a value but never used.","'numpie' is assigned a value but never used.","'indi' is assigned a value but never used.","'connect' is defined but never used.","'Sector' is defined but never used.","'Cell' is defined but never used.","'Legend' is defined but never used.","'TableHead' is defined but never used.","'data' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'a' is already defined.","'pillIcon' is defined but never used.","'vitalIcon' is defined but never used.","'diseaseIcon' is defined but never used.","'Avatar' is defined but never used.","'tabGroup' is already defined.","'tabgr' is already defined.","'tabgro' is already defined.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'FormGroup' is defined but never used.","'dp' is defined but never used.","'setAuth' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'gmc' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat"]